[{"C:\\Users\\PC\\Programacion\\markdown-previewer\\src\\index.js":"1","C:\\Users\\PC\\Programacion\\markdown-previewer\\src\\App.js":"2"},{"size":211,"mtime":1691391938527,"results":"3","hashOfConfig":"4"},{"size":2517,"mtime":1691462490687,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","suppressedMessages":"8","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"9"},"700xze",{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},"C:\\Users\\PC\\Programacion\\markdown-previewer\\src\\index.js",[],[],[],"C:\\Users\\PC\\Programacion\\markdown-previewer\\src\\App.js",["14"],[],"import { useRef, useEffect } from \"react\";\r\nimport { marked } from \"marked\";\r\n\r\nmarked.use({\r\n  breaks: true,\r\n  mangle: false,\r\n  headerIds: false,\r\n});\r\n\r\n\r\nconst App = () => {\r\n\r\n  const inputText = useRef('');\r\n  const initialValue = `# Welcome to my React Markdown Previewer!\r\n\r\n## This is a sub-heading...\r\n### And here's some other cool stuff:\r\n\r\nHeres some code, \\`<div></div>\\`, between 2 backticks.\r\n\r\n\\`\\`\\`\r\n// this is multi-line code:\r\n\r\nfunction anotherExample(firstLine, lastLine) {\r\n  if (firstLine == '\\\\\\`\\\\\\`\\\\\\`' && lastLine == '\\\\\\`\\\\\\`\\\\\\`') {\r\n    return multiLineCode;\r\n  }\r\n}\r\n\\`\\`\\`\r\n\r\nYou can also make text **bold**... whoa!\r\nOr _italic_.\r\nOr... wait for it... **_both!_**\r\nAnd feel free to go crazy ~~crossing stuff out~~.\r\n\r\nThere's also [links](https://www.freecodecamp.org), and\r\n> Block Quotes!\r\n\r\nAnd if you want to get really crazy, even tables:\r\n\r\nWild Header | Crazy Header | Another Header?\r\n------------ | ------------- | -------------\r\nYour content can | be here, and it | can be here....\r\nAnd here. | Okay. | I think we get it.\r\n\r\n- And of course there are lists.\r\n  - Some are bulleted.\r\n     - With different indentation levels.\r\n        - That look like this.\r\n\r\n\r\n1. And there are numbered lists too.\r\n1. Use just 1s if you want!\r\n1. And last but not least, let's not forget embedded images:\r\n\r\n![freeCodeCamp Logo](https://cdn.freecodecamp.org/testable-projects-fcc/images/fcc_secondary.svg)`\r\n\r\n  useEffect(() => {\r\n    document.getElementById(\"preview\").innerHTML = marked.parse(initialValue);\r\n  }, []);\r\n  \r\n  const handleInputChange = () => {\r\n    const rawMarkup = marked.parse(inputText.current.value);\r\n    document.getElementById(\"preview\").innerHTML = rawMarkup;\r\n  };\r\n\r\n  return (\r\n    <div className=\"contenedor d-flex flex-row justify-content-center align-items-stretch gap-4 flex-wrap\">\r\n      <div className=\"panel editor\">\r\n        <header className=\"title\">\r\n          <i className=\"fa fa-free-code-camp\"></i> Editor\r\n        </header>\r\n        <textarea\r\n          id=\"editor\"\r\n          className=\"form-control p-4\"\r\n          ref={inputText}\r\n          autoFocus\r\n          onChange={handleInputChange}\r\n        >\r\n        {initialValue}\r\n        </textarea>\r\n      </div>\r\n      <div className=\"panel previewer\">\r\n        <header className=\"title\">\r\n          <i className=\"fa fa-free-code-camp\"></i> Previewer\r\n        </header>\r\n        <div id=\"preview\" className=\"form-control\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n",{"ruleId":"15","severity":1,"message":"16","line":60,"column":6,"nodeType":"17","endLine":60,"endColumn":8,"suggestions":"18"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initialValue'. Either include it or remove the dependency array.","ArrayExpression",["19"],{"desc":"20","fix":"21"},"Update the dependencies array to be: [initialValue]",{"range":"22","text":"23"},[1548,1550],"[initialValue]"]